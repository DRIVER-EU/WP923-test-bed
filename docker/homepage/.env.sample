TESTBED_HOST=driver-testbed.localdomain
BROKER_PORT=3561
SCHEMA_REGISTRY_PORT=3562
DB_NAME=tb6
KAFKA_TOPICS_UI_PORT=3660
SCHEMA_REGISTRY_UI_PORT=3760
ADMINTOOL_PORT=8697
AARTOOL_PORT=8695
PGADMIN_PORT=3056
TIME_PORT=8106
TMT_PORT=3216
CERT_MGT_PORT=8446
LFS_PORT=9090

#OST
OST_WEB_HOST_PORT=http://127.0.0.1:80

# White-separated list of domain names served by the reverse-proxy
DOMAIN_NAMES=example.com

TESTBED_TITLE=Trial 0 - Dry Run 1

# HTTPS reverse-proxy configuration
HTTPD_LOG_LEVEL=info

# Use OCSP staping, turn it on in production
SSL_USE_STAPLING=Off

# Set non-empty email address here to enable use of Let's Encrypt certificates
LETS_ENCRYPT_EMAIL=
# Certbot flags, e.g. "--test-cert" to use (rate-unlimited) staging environment for development/testing, else leave empty
LETS_ENCRYPT_CERTBOT_FLAGS=--test-cert

# Define the backend URL where to proxy HTTPS requests on port 8443, e.g. Keycloak URL ("http://keycloak:8080/", where 'keycloak' would be the Docker container alias on the Docker network); or leave undefined/empty if not required
# WARNING: if you set this, then you must expose port 8443 in docker-compose.yml. And make sure the proxy is attached to the same Docker network as the backend (see Docker Compose)
BACKEND_URL_VIA_8443=

# OpenID Connect client settings

#  Set non-empty URL to enable OpenID Connect authentication/authorization (else no access control)
OIDC_PROVIDER_METADATA_URL=https://keycloak.example.net/auth/realms/Testrealm/.well-known/openid-configuration

# You may set this to Off but only for development/testing
OIDC_VALIDATE_PROVIDER_CERT=On
OIDC_CLIENT_ID=proxy_example.com_443
OIDC_CLIENT_SECRET=8e08b628-205c-4573-a4a0-00ebf4c3a929
OIDC_USER_INFO_REFRESH_INTERVAL_SEC=10
