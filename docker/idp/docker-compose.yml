---
version: '3'
services:

  # Database for idp service
  postgres:
      image: postgres
      volumes:
        - postgres_data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: ${KEYCLOAK_PASSWORD}

  # Identity Provider (OpenID Connect) for Web-SSO, based on Keycloak
  keycloak:
      build:
        context: ./keycloak
        #args:
        #  WEBAUTHN_PLUGIN_VERSION: "0.3.RELEASE"
      image: drivereu/keycloak:6.0.1-2
      hostname: driver-testbed.eu
      # Workaround for container failing to resolve domain names required by redbird to get certificate from Letsencrypt on-the-fly
      extra_hosts:
        - "mirrorlist.centos.org:85.236.43.108"
        - "acme-v02.api.letsencrypt.org:104.66.96.217"
        - "acme-staging-v02.api.letsencrypt.org:172.65.46.172"
        - "driver-testbed.eu:134.221.20.200"
        - "ocsp.stg-int-x1.letsencrypt.org:95.100.96.193"
        - "ocsp.int-x3.letsencrypt.org:95.100.96.232"
      depends_on:
        - postgres
      volumes:
        - ./keycloak/test-ca-crt.pem:/tmp/test-ca-crt.pem
        # - ./keycloak/themes/thales:/opt/jboss/keycloak/themes/thales
        # The realm must have been exported with instructions from: https://github.com/jboss-dockerfiles/keycloak/tree/master/server#exporting-a-realm
        # $ docker exec -it docker_keycloak_1 sh -c "keycloak/bin/standalone.sh -Djboss.socket.binding.port-offset=100 -Dkeycloak.migration.action=export -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.realmName=driver -Dkeycloak.migration.usersExportStrategy=REALM_FILE -Dkeycloak.migration.file=/tmp/driver-realm.json"
        - ./keycloak/l3-realm.json:/tmp/l3-realm.json
        - etcletsencrypt:/etc/letsencrypt
        - varletsencrypt:/var/lib/letsencrypt

      environment:
        X509_CA_BUNDLE: /tmp/test-ca-crt.pem
        DB_VENDOR: postgres
        DB_ADDR: postgres
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_SCHEMA: public
        DB_PASSWORD: ${KEYCLOAK_PASSWORD}
        KEYCLOAK_HOSTNAME: driver-testbed.eu
        KEYCLOAK_USER: admin
        # Use uuidgen command to generate the initial password
        KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}

        # KEYCLOAK_IMPORT cannot be used here because refers to objects from Webauthn plugin which is deployed after attempt to import the realm from KEYCLOAK_IMPORT -> fail
        # Workaround: in the command script , use Admin CLI to import the realm after startup if not there yet
        KEYCLOAK_IMPORTED_REALM: /tmp/l3-realm.json

        # To add a custom theme extend the Keycloak image add the theme to the /opt/jboss/keycloak/themes directory.
        # KEYCLOAK_WELCOME_THEME: thales
        # KEYCLOAK_DEFAULT_THEME: thales
        # KEYCLOAK_LOGLEVEL: DEBUG
        # ROOT_LOGLEVEL: INFO
        # JDBC_PARAMS: "connectTimeout=30000"
        
        # Letsencrypt (certbot) setup
        # Server hostname (Common Name) to be put in the SSL certificate by Letsencrypt if Letsencrypt certificate issuing is used (see down below).
        CERT_CN: "driver-testbed.eu"
        # Uncomment/define the variable below to request certificate from letsencrypt.org; else the default certificate from the Docker image (/etc/x509/https directory) is used
        #LETS_ENCRYPT_EMAIL: "erik.vullings@tno.nl"
        # Set this variable to empty string or leave undefined to use Letsencrypt production environment (instead of staging one). Prod environment is rate-limited therefore not recommended for development/testing.
        #LETS_ENCRYPT_TEST_FLAG: "--test-cert"
       
      ports:
        - 8443:8443
      entrypoint: sh "/opt/jboss/tools/docker-entrypoint-override.sh"
      command: ["-b", "0.0.0.0"] 

#  letsencryptstore:
#    image: busybox
#    volumes:
#      - etcletsencrypt:/etc/letsencrypt
#      - varletsencrypt:/var/lib/letsencrypt   
  
volumes:
  varletsencrypt:
  etcletsencrypt:
  postgres_data:
    driver: local
